#<<: !include secrets.yaml
esphome:
  name: waterdepth1
  platform: ESP32
  board: esp32doit-devkit-v1

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Waterdepth1 Fallback Hotspot"
    password: "mYJr5Q9cloL4"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

time:
  - platform: homeassistant
    id: esptime
  
font:
  - file: "Ubuntu-Regular.ttf"
    id: ubuntu_14
    size: 13
  - file: "Ubuntu-Regular.ttf"
    id: ubuntu_30
    size: 30    
  - file: "Ubuntu-Regular.ttf"
    id: ubuntu_74
    size: 74

color:
  - id: darkbrown1
    red: 76%
    green: 61%
    blue: 42%
  - id: darkblue1
    red: 2%
    green: 14%
    blue: 24%
  - id: lightblue1
    red: 35%
    green: 42%
    blue: 52%
  - id: lightbrown1
    red: 78%
    green: 71%
    blue: 58%
    
spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19

sensor:
  - platform: dht
    pin: GPIO15
    temperature:
      name: "WaterDepth1 Temperature"
      id: temperature
    humidity:
      name: "WaterDepth1 Humidity"
      id: rh
    update_interval: 10s
  - platform: wifi_signal
    name: Wifi SSI
    id: wifi_ssi
    update_interval: 5s
    internal: true 
  - platform: template
    name: "WaterDepth1 Level"
    id: waterlevel
    lambda: |-
      float p = id(proximity).state;
      if (isnan(p)){
        return NAN;
      }
      else {
        return 300 -(int)(p*10);
      }
    update_interval: 10s
  - platform: ultrasonic
    trigger_pin: GPIO13
    echo_pin: GPIO12
    internal: true
    id: proximity 
    
text_sensor:
  - platform: wifi_info
    ssid:
      name: Connected SSID    
      id: wifi_ssid
      internal: true

switch:
  - platform: gpio
    pin: GPIO4
    name: "Backlight"
    restore_mode: ALWAYS_ON     
    id: backlight
      
display:
  - platform: st7789v
    backlight_pin: GPIO4
    cs_pin: GPIO5
    dc_pin: GPIO16
    reset_pin: GPIO23
    rotation: 180
    id: oled
    lambda: |-
      it.fill(lightbrown1);
      it.filled_rectangle(0,0,it.get_width(), 21, darkbrown1);
      it.strftime(1, 2, id(ubuntu_14), lightblue1, TextAlign::TOP_LEFT, "%H:%M", id(esptime).now());
      it.printf(104, 2, id(ubuntu_14), lightblue1, TextAlign::TOP_RIGHT, "%s", id(wifi_ssid).state.c_str());
      it.printf(109, 2, id(ubuntu_14), lightblue1, TextAlign::TOP_LEFT, "%.0f", id(wifi_ssi).state);
      it.print(4, 36, id(ubuntu_14), darkblue1, "Water Depth");
      it.printf(it.get_width()/2, 48, id(ubuntu_74), darkblue1, TextAlign::TOP_CENTER, "%.0f", id(waterlevel).state);
      it.print(102, 120, id(ubuntu_14), darkblue1, "mm");
      it.printf(it.get_width()/2, 148, id(ubuntu_30), darkblue1, TextAlign::TOP_CENTER, "%.0f%%RH", id(rh).state);
      it.printf(it.get_width()/2, 202, id(ubuntu_30), darkblue1, TextAlign::TOP_CENTER, "%.1fÂ°C", id(temperature).state);

